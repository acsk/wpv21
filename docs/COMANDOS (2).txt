iniciar o server na porta desejada NPM

PORT=4000 npm start

--------------------GITHUB--------------------------------------

git init

git add .


git commit -m 'QUALQUERCOISA'

--> ENVIAR ALTERAÃ‡Ã•ES PARA MASTER
git push -u origin master


--> CLONAR REPOSITORIO
git clone git://github.com/schacon/grit.git minhaspasta

---> trazendo somente as alteraÃ§Ãµes

----> para atualizar seu repositÃ³rio local com a mais nova versÃ£o, execute 
git pull

=======SE PRECSAR FORÃ‡AR O PULL ======
git reset --hard HEAD
git pull

--------------------------------------------------------------


LINUX:

REMOVER PASTA COM CONTEUDO:

	rm -rf diretorio


comandos linux uteis:

ðŸ‘‰ ps -e|grep node

ðŸ‘‰ kill -9 'piddoprocesso'

Para verificar todos os processos do chrome
ðŸ‘‰ pidof chrome

Para matar (kill) todos os processos de um usuÃ¡rio em particular, entre como root e digite:

ðŸ‘‰ kill -9 `ps -fu nomedousuario |awk '{ print $2 }'|grep -v PID`

ðŸ‘‰ kill -9 PID

matar todos os processo por nome:

ðŸ‘‰ sudo pkill -f 'chrome'

ðŸ‘‰ Copiar o diretÃ³rio /home/fabio/Documentos e todo o seu conteÃºdo recursivamente para o diretÃ³rio /home/fabio/backup/:

$ cp -r /home/fabio/Documentos /home/fabio/backup/

================================ limpar cache linux (ubuntu) ======================

Para limpar o Cache/Buffer de RAM:

$ sudo -i
# sync; echo 1 > /proc/sys/vm/drop_caches

Para limpar dentries e inodes:

$ sudo -i
# sync; echo 2 > /proc/sys/vm/drop_caches

Para limpar tudo: Cache/Buffer, Dentries e Inodes:

$ sudo -i
# sync; echo 3 > /proc/sys/vm/drop_caches

Para limpar o espaÃ§o em disco consumido pela SWAP:

$ sudo -i
# swapoff -a && swapon -a


---------------------------------------------
comandos docker-compose

	subir container e arquivos:
	docker-compose up	



---------------------------------------------
listar imagens:

	docker ps

listas imagens

	docker images

listar containers

	docker container ls -a

start stop container

	docker start my_container

remover todos as imagens cache:

	docker system prune -a

remover container
	
	docker container rm cc3f2ff51cab

acessar comando linux da imagem ativa:

	docker exec -i -t nginx-container /bin/bash


copiar arquivos para o conteineer

	docker cp c3f9526126ae: ./usr/src/app

docker cp /app c3f9526126ae:/app



Segue a lista de comandos docker e sua utilidade:

docker attach  â€“ Acessar dentro do container e trabalhar a partir dele.
docker build   â€“ A partir de instruÃ§Ãµes de um arquivo Dockerfile eu possa criar uma imagem.
docker commit  â€“ Cria uma imagem a partir de um container.
docker cp      â€“ Copia arquivos ou diretÃ³rios do container para o host.
docker create  â€“ Cria um novo container.
docker diff    â€“ Exibe as alteraÃ§Ãµes feitas no filesystem do container.
docker events  â€“ Exibe os eventos do container em tempo real.
docker exec    â€“ Executa uma instruÃ§Ã£o dentro do container que estÃ¡ rodando sem precisar atachar nele.
docker export  â€“ Exporta um container para um arquivo .tar.
docker history â€“ Exibe o histÃ³rico de comandos que foram executados dentro do container.
docker images  â€“ Lista as imagens disponÃ­veis no host.
docker import  â€“ Importa uma imagem .tar para o host.
docker info    â€“ Exibe as informaÃ§Ãµes sobre o host.
docker inspect â€“ Exibe r o json com todas as configuraÃ§Ãµes do container.
docker kill    â€“ Da Poweroff no container.
docker load    â€“ Carrega a imagem de um arquivo .tar.
docker login   â€“ Registra ou faz o login em um servidor de registry.
docker logout  â€“ Faz o logout de um servidor de registry.
docker logs    â€“ Exibe os logs de um container.
docker port    â€“ Abre uma porta do host e do container.
docker network â€“ Gerenciamento das redes do Docker.
docker node    â€“ Gerenciamento dos nodes do Docker Swarm.
docker pause   â€“ Pausa o container.
docker port    â€“ Lista as portas mapeadas de um container.
docker ps      â€“ Lista todos os containers.
docker pull    â€“ Faz o pull de uma imagem a partir de um servidor de registry.
docker push    â€“ Faz o push de uma imagem a partir de um servidor de registry.
docker rename  â€“ Renomeia um container existente.
docker restart â€“ Restarta um container que estÃ¡ rodando ou parado.
docker rm      â€“ Remove um ou mais containeres.
docker rmi     â€“ Remove uma ou mais imagens.
docker run     â€“ Executa um comando em um novo container.
docker save    â€“ Salva a imagem em um arquivo .tar.
docker search  â€“ Procura por uma imagem no Docker Hub.
docker service â€“ Gernciamento dos serviÃ§os do Docker.
docker start   â€“ Inicia um container que esteja parado.
docker stats   â€“ Exibe informaÃ§Ãµes de uso de CPU, memÃ³ria e rede.
docker stop    â€“ Para um container que esteja rodando.
docker swarm   â€“ ClusterizaÃ§Ã£o das aplicaÃ§Ãµes em uma orquestraÃ§Ã£o de vÃ¡rias containers, aplicaÃ§Ãµes junto.
docker tag     â€“ Coloca tag em uma imagem para o repositorio.
docker top     â€“ Exibe os processos rodando em um container.
docker unpause â€“ Inicia um container que estÃ¡ em pause.
docker update  â€“ Atualiza a configuraÃ§Ã£o de um ou mais containers.
docker version â€“ Exibe as versÃµes de API, Client e Server do host.
docker volume  â€“ Gerenciamento dos volumes no Docker.
docker wait    â€“ Aguarda o retorno da execuÃ§Ã£o de um container para iniciar esse container.

Obs.: Ã‰ possÃ­vel ver todos os comandos que o Docker possui, tendo o docker instalado, basta digitar no terminal docker --help